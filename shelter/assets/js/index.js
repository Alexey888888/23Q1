console.log("-----total=97-----");

console.group("Реализация burger menu на обеих страницах: +26");
console.log(
  "-при ширине страницы меньше 768рх панель навигации скрывается, появляется бургер-иконка: +2\n\n"
);
console.log(
  "-при нажатии на бургер-иконку, справа плавно появляется адаптивное меню шириной 320px, бургер-иконка плавно поворачивается на 90 градусов: +4\n\n"
);
console.log("-высота адаптивного меню занимает всю высоту экрана: +2\n\n");
console.log(
  "-при повторном нажатии на бургер-иконку или на свободное от бургер-меню пространство адаптивное меню плавно скрывается уезжая за правую часть экрана, бургер-иконка плавно поворачивается на 90 градусов обратно: +4\n\n"
);
console.log(
  "-бургер-иконка создана при помощи html+css, без использования изображений: +2\n\n"
);
console.log(
  "-ссылки в адаптивном меню работают, обеспечивая плавную прокрутку по якорям, сохраняются заданные на первом этапе выполнения задания требования интерактивности элементов меню: +2\n\n"
);
console.log(
  "-при клике по любой ссылке (интерактивной или неинтерактивной) в меню адаптивное меню плавно скрывается вправо, бургер-иконка поворачивается на 90 градусов обратно: +2\n\n"
);
console.log(
  "-расположение и размеры элементов в бургер-меню соответствует макету (центрирование по вертикали и горизонтали элементов меню, расположение иконки). При этом на странице Pets цветовая схема может быть как темная, так и светлая: +2\n\n"
);
console.log("-область, свободная от бургер-меню, затемняется: +2\n\n");
console.log("-страница под бургер-меню не прокручивается: +4\n\n");
console.groupEnd();

console.group("Реализация слайдера-карусели на странице Main: +25");
console.log(
  "-при нажатии на стрелки происходит переход к новому блоку элементов: +4\n\n"
);
console.log(
  "-смена блоков происходит с соответствующей анимацией карусели (способ выполнения анимации не проверяется): +4\n\n"
);
console.log(
  "-слайдер бесконечен, т.е. можно бесконечно много нажимать влево или вправо, и каждый раз будет прокрутка в эту сторону с новым набором карточек: +4\n\n"
);
console.log(
  "-при переключении влево или вправо прокручивается ровно столько карточек, сколько показывается при текущей ширине экрана (тлько 3 для 1280px): +1\n\n"
);
console.log(
  "-в текущем блоке слайда карточки с питомцами не повторяются: +4\n\n"
);
console.log(
  "-в следующем блоке нет дублирования карточек с текущим блоком. Например в слайдере из 3 элементов, следующий выезжающий слайд будет содержать 3 (из 8 доступных) новых карточки питомца, таких, каких не было среди 3х карточек на предыдущем уехавшем слайде: +4\n\n"
);
console.log(
  "-при каждой перезагрузке страницы формируется новая последовательность карточек: +2\n\n"
);
console.log(
  "-генерация наборов карточек происходит на основе 8 объектов с данными о животных: +2\n\n"
);
console.groupEnd();

console.group("Реализация пагинации на странице Pets: +36");
console.log(
  "-при перезагрузке страницы всегда открывается первая страница пагинации: +2\n\n"
);
console.log(
  "-при нажатии кнопок > или < открывается следующая или предыдущая страница пагинации соответственно: +2\n\n"
);
console.log(
  "-при нажатии кнопок >> или << открывается последняя или первая страница пагинации соответственно: +2\n\n"
);
console.log("-при открытии первой страницы кнопки << и < неактивны: +2\n\n");
console.log("-при открытии последней страницы кнопки > и >> неактивны: +2\n\n");
console.log(
  "-в кружке по центру указан номер текущей страницы. При переключении страниц номер меняется на актуальный: +2\n\n"
);
console.log(
  "-при загрузке страницы формируется массив из 48 объектов питомцев. Каждый из 8 питомцев должен встречаться ровно 6 раз: +4\n\n"
);
console.log(
  "-при каждой перезагрузке страницы формируется новый массив со случайной последовательностью: +4\n\n"
);
console.log(
  "-карточки питомцев не должны повторяться на одной странице: +4\n\n"
);
console.log(
  "-при переключении страницы данные меняются (для >1280px меняется порядок карточек, для остальных - меняется набор и порядок карточек): +4\n\n"
);
console.log(
  "-при неизменных размерах области пагинации, в том числе размерах окна браузера, и без перезагрузки страницы, возвращаясь на страницу под определенным номером, контент на ней всегда будет одинаков. Т.е. карточки питомцев будут в том же расположении, что и были до перехода на другие страницы: +2\n\n"
);
console.log(
  "-общее количество страниц при ширине экрана 1280px - 6, при 768px - 8, при 320px - 16 страниц: +2\n\n"
);
console.log(
  "-при изменении ширины экрана (от 1280px до 320px и обратно), пагинация перестраивается и работает без перезагрузки страницы (страница может оставаться той же или переключаться, при этом сформированный массив - общая последовательность карточек - не обновляется, сохраняются все остальные требования к пагинации): +4\n\n"
);
console.groupEnd();

console.group("Реализация попап на обеих страницах: +10");
console.log(
  "-попап появляется при нажатии на любое место карточки с описанием конкретного животного: +2\n\n"
);
console.log("-часть страницы вне попапа затемняется: +2\n\n");
console.log(
  "-при нажатии на область вокруг попапа или на кнопку с крестиком попап закрывается, при этом при нажатии на сам попап ничего не происходит: +2\n\n"
);
console.log("-кнопка с крестиком интерактивная: +2\n\n");
console.log(
  "-окно попапа (не считая кнопку с крестиком) центрировано по всем осям, размеры элементов попапа и их расположение совпадают с макетом: +2\n\n"
);
console.groupEnd();
